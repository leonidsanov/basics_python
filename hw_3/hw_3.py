"""
Дан список повторяющихся элементов.
Вернуть список с дублирующимися элементами.
В результирующем списке не должно быть дубликатов.
"""

def remove_duplicates(input_list):
    return list(set([x for x in input_list if input_list.count(x) > 1]))

# создаём список с повторяющимися данными
input_list = [1, 2, 3, 1, 4, 2, 5, 4]
result_list = remove_duplicates(input_list)
print(result_list)

"""
В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых.
Не учитывать знаки препинания и регистр символов.
За основу возьмите любую статью из википедии или из документации к языку.
"""

# Создаём переменную с текстом
text = """
Весь сад в дожде! Весь дождь в саду!
Погибнут дождь и сад друг в друге,
Оставив мне решать судьбу
Зимы, явившейся на юге.
"""
# Создаём переменную с символами, которые нужно удалить
delete = ".,!?;:-[]{}()='"
for i in delete:
    # В тексте заменяем все ненужные символы на пробелы
    text = text.replace(i, "")
# Заглавные буквы заменяем строчными
text = text.lower()
print(sorted(set(text.split()), key=lambda x: text.count(x))[-10:])

"""
Создайте словарь со списком вещей для похода в качестве ключа и их массой в качестве значения.
Определите какие вещи влезут в рюкзак передав его максимальную грузоподъёмность.
Достаточно вернуть один допустимый вариант.
*Верните все возможные варианты комплектации рюкзака.
"""

items = {'tent': 5, 'water': 3, 'food': 4, 'clothes': 2, 'first aid kit': 1}
max_weight = 10

possible_items = []
for item, weight in items.items():
    if weight <= max_weight:
        possible_items.append(item)
        max_weight -= weight
possible_items

print(possible_items)
